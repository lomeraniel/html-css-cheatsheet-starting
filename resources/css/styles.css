/*


position: static; The element is positioned according to the normal flow of the document. The top, right, bottom, left, and z-index properties have no effect. This is the default value.
position: relative; positioned according to the normal flow of the document, and then offset relative to itself based on the values of top, right, bottom, and left. stacking context when the value of z-index is not auto
position: absolute; removed from the normal document flow, and no space is created for the element in the page layout. positioned relative to its closest positioned ancestor. Its final position is determined by the values of top, right, bottom, and left.  stacking context when the value of z-index is not auto
position: fixed; removed from the normal document flow, and no space is created for the element in the page layout. Its final position is determined by the values of top, right, bottom, and left. always creates a new stacking context
position: sticky; The element is positioned according to the normal flow of the document, and then offset relative to its nearest scrolling ancestor and containing block. always creates a new stacking context. Note that a sticky element "sticks" to its nearest ancestor that has a "scrolling mechanism" 

Global values
position: inherit;
position: initial;
position: revert;
position: revert-layer;
position: unset;


display: block; The element generates a block box, generating line breaks both before and after the element when in the normal flow.
display: inline; The element generates one or more inline boxes that do not generate line breaks before or after themselves. In normal flow, the next element will be on the same line if there is space.
display: inline-block; The element generates a block box that will be flowed with surrounding content as if it were a single inline box (behaving much like a replaced element would).
display: flex;
display: inline-flex;
display: grid;
display: inline-grid;
display: flow-root;

float-clear


Link pseudoclasses order:

:link
:visited
:hover
:active

*/


/* Another way to include fonts, this time uploading them instead of using Google Fonts in the html */
@font-face {
  font-family: 'GlegooBanner';
  src: url('../fonts/Glegoo-Regular.woff2') format('woff2'),
       url('../fonts/Glegoo-Regular.woff') format('woff'),
       url('../fonts/Glegoo-Regular.ttf') format('truetype')
}

html, body {
    margin: 0;
    padding: 0;
    font-size: 16px;
  }

@media only screen and (max-width: 1000px) {
    html {
      font-size: 16px;
    }
}

@media only screen and (max-width: 680px) {
    html {
      font-size: 14px;
    }
 }

/* Fonts */
 
/*
h1, 
h2, 
h3, 
p {
  font-family: "Raleway", "Helvetica", sans-serif;
}*/

a {
  text-decoration: underline;
  color: inherit;
  cursor: pointer;
}

a:hover {
  color: yellowgreen;
  text-decoration: none;
}

a:active {
  font-weight: bold;
}

strong {
  font-weight: bold;
}

.image-container {
  overflow: hidden;
}

.image-container img {
  display: block;
  max-width: 100%;
}


/* Header */

header {
    background-color:blueviolet;
    /* to stay stuck at the top, also alter top property for next item */
    /* position: fixed; */
    top: 0px;
    /* This makes the menu to align to the right */
    display: flex;
    align-items: center;
    padding: .5rem 3.75rem;
    width: 100%;
    z-index: 2;
}

@media only screen and (max-width: 550px) {
  .header {
    flex-direction: column;
  }

  .header .logo {
    flex-grow: 0;
  }
}

header .logo-small {
  display: none;
}

header .logo-small,
header .logo-big {
  flex-grow: 1;
}

nav {
  margin: 0;
  padding: 20px 0;
}

nav li {
  color: #FFF;
  font-family: 'Raleway', sans-serif;
  font-weight: 600;
  font-size: 12px;
  display: inline-block;
  width: 80px;
  padding-right: 0;
}

nav li:last-child {
  padding-right: 0;
}

@media only screen and (max-width: 990px) {
  header .logo-big {
    display: none;
  }

  header .logo-small {
    display: block;
  }
}

@media only screen and (max-width: 540px) {
  header {
    flex-direction: column;
    padding-left: 0;
    padding-right: 0;
  }

  header .logo-small {
    margin-bottom: 1rem;
  }
}

/* Banner */

#banner {
  /* use relative here if you'll have an overlay, otherwise you can use flex */
  position: relative;
  /* necessary when header is fixed */
  /* top: 150px; */
  height: 44rem;
  padding: 10% 25%;
  /* x y repeat */
  background: url("../images/birds.jpg") center top no-repeat;
  background-size: cover;
  text-align: center;
  z-index: 1;
  justify-content: space-around;
}

#banner h1 {
  color: white;
}

#banner p {
  color: rgba(255, 255, 255, 0.7);

}

#banner:before { /* Overlay */
  background-color: rgba(0, 0, 255, 0.25);
  position: absolute;
  content: "";
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

#banner * {
  position: relative; /* Makes elements display above overlay. */
}

@media only screen and (max-width: 820px) {
  h1 {
    padding-top: 7rem;
    font-size: 6rem;
  }
}

@media only screen and (max-width: 590px) {
  h1 {
    font-size: 4rem;
  }
}

/* Section Colors */

.colors {
  position: relative;
  width: 100%;
  height: 30rem;
  padding: 3.875rem 15% 13.5rem 15%;
  background: lightyellow;
  background-size: cover;
  text-align: center;
  z-index: 1;
}

#red-rectangle {
  width: 100px;
  height: 100px;
  background-color: rgba(255, 0, 0, 0.5);
  margin-top: 25px; /* Adjust this value to control the overlap */  
  margin-left: 25px;  
}

#blue-rectangle {
  width: 100px;
  height: 100px;
  background-color: hsla(210, 52%, 50%, 0.5);
  margin-top: -25px; /* Adjust this value to control the overlap */  
  margin-left: 45px;
  margin-bottom: 50px;
  
}

/* Section Typography */

#typography {
  margin-top: 74px;
  padding: 40px 40px 100px 40px;
  background-color: aqua;
  position: relative;
  width: 100%;
  color: navy;
}

#typography p {
  border-top: 1px solid navy;
  border-bottom: 1px solid navy;
  color: navy;
  font-weight: lighter;
  word-spacing: 0.25em;
  line-height: 1.4;
  font-family: 'GlegooBanner';
  font-size: 20px;
  text-align: justify;
}

#typography h1 {
  font-size: 40px;
  font-weight: 900;
  text-align: center;
}

#typography h2 {
  font-size: 30px;
  font-weight: lighter;
  text-align: center;
}

/* Breadcrumbs */

.breadcrumb > li {
  display: inline;
}

.breadcrumb li+li::before {
	padding: 10px;
  content: ">";
}

.breadcrumb a {
    text-decoration: none;
}

.breadcrumb a:hover {
  color: red;
}

.attribute::after {
  content: "x";
  color: red;
  font-size: 10px;
  vertical-align: super;
}

/* Arrow Breadcrumbs */

#breadcrumbs2 {
  position: relative;
  width: 100%;
  height: 10rem;
  background: lightyellow;
  background-size: cover;
  text-align: center;
  z-index: 3;
}

/* Body of the arrows */
.arrowbreadcrumb {
  text-align: left;
}
.arrowbreadcrumb li {
  float: left;
  display: inline;
}
/* Pseudo-elements on top of our elements */
.arrowbreadcrumb a::before,
.arrowbreadcrumb a::after {
  content: "";
  position: absolute;
  border-color: darkcyan;
  border-style: solid;
  border-width: 15px 5px;
}

.arrowbreadcrumb a {
  font-family: 'Pontano Sans',sans-serif;
  font-size: 16px;
  padding: 14px;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  display: block;
  color: #fff;
  background: darkcyan;
  text-decoration: none;
  position: relative;
  height: 30px;
  line-height: 30px;
  text-align: center;
  margin-right: 15px;
  padding: 0 5px;
}

/* The total width of our pseudo-elements is 10px, since the border has 5px on the left and 5px on the right. Given this, move the pseudo-elements to the proper location using the following CSS:
Before and after are used for thad */
.arrowbreadcrumb a::before {
  left: -10px;
  /* Arrow tails */
  border-left-color: transparent;
}

.arrowbreadcrumb a::after {
  left: 100%;
  border-color: transparent;
  /* Arrowheads */
  border-left-color: darkcyan;
}
/* Clickability */
.arrowbreadcrumb a:hover {
  background-color: blue;
}
.arrowbreadcrumb a:hover::before {
  border-color: blue;
  border-left-color: transparent;
}
.arrowbreadcrumb a:hover::after {
  border-left-color: blue;
}


/* Section Journal */

#journal {
  padding: 0 25% 4rem 25%;
  background-color: rgb(254, 231, 218);
  color: #4a4a4a;
  font-family: "Work Sans", serif;
}

.photo {
  width: 75%;
  padding: 1.11rem;
  border-radius: 5px;
  margin: 0 auto 4.44rem auto;
  background-color: white;
}

.photo .image-container {
  overflow: hidden;
  margin-bottom: 1.11rem;
}

.photo .image-container img {
  width: 100%;
}

.photo .caption {
  font-style: italic;
  font-family: "Merriweather", serif;
}

.photo.first {
  position: relative;
  top: -2.77rem;
  margin-bottom: 1.67rem;
}

#journal p {
  padding-bottom: 2.77rem;
  font-size: 1.5rem;
  line-height: 1.4;
}

#journal .first-letter {
  float: left;
  padding-right: 1.4rem;
  font-family: "Abril Fatface", serif;
  font-size: 7.44rem;
  color: #10b0d8;
  line-height: .87;
}

@media only screen and (max-width: 680px) {
  .journal {
    padding: 0 10% 4rem 10%;
  }
}

/* Section Supporting */

.container {
  max-width: 940px;
  margin: 0 auto;
  padding: 0 10px;
  text-align: center;
}

.supporting {
  padding-top: 100px;
  padding-bottom: 120px;
  z-index: 1;
  bottom: 10px;
  background-color: white;
  color: #333333;

  width: 100%;
  height: 30rem;
  padding: 3.875rem 15% 13.5rem 15%;
  background-size: cover;
  text-align: center;
}

.supporting .col {
  font-family: 'Raleway', sans-serif;
  text-align: center;
  display: inline-block;
  width: 200px;
}

.supporting img {
  height: 32px;
  display: inline-block;
}

.supporting h2 {
  font-weight: 600;
  font-size: 23px;
  text-transform: uppercase;
}

.supporting p {
  font-weight: 400;
  font-size: 14px;
  line-height: 20px;
  padding: 0 20px;
  margin-bottom: 20px;
}

.supporting a {
  background-color: white;
  color: #333333;
  font-family: 'Raleway', sans-serif;
  font-weight: 600;
  font-size: 12px;
  letter-spacing: 1.3px;
  text-decoration: none;
  text-transform: uppercase;
  padding: 10px;
  margin-bottom: 10px;
  border: 2px solid #333333; 
}

@media (max-width: 500px) {
  main h1 {
    font-size: 50px;
    padding: 0 40px;
  }

  .supporting .col {
    width: 100%;
  }
}

/* Buttons */

#buttons {
  width: 100%;
  background-color: lightpink;
  padding: 50px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
  height: 500px;
  font-family: 'Roboto', sans-serif;
}

button {
  height: 50px;
  width: 200px;
  cursor: pointer;
  font-weight: 600;
  font-size: 15px;
}

.skeuomorphic {
  border: 2px solid #0c960c;
  border-radius: 5px;
  color: #F8F8F8;
  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.2), 0px -2px 2px rgba(255, 255, 255, 0.5) inset, 0 2px 2px rgba(255, 255, 255, 0.8) inset;
  background: linear-gradient(#1D1, #0ebc0e);
  text-shadow: 0 -2px #0c960c;
}

.skeuomorphic:hover {
  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.1), 0px -2px 2px rgba(255, 255, 255, 0.25) inset, 0 2px 2px rgba(255, 255, 255, 0.4) inset;
  background: #0ebc0e;
  background: linear-gradient(#0ebc0e, #0c960c);
  border-color: #064f06;
}

.skeuomorphic:active {
  margin-top: 2px;
  margin-bottom: -2px;
  box-shadow: 0px 2px 2px rgba(63, 63, 63, 0.1), 0px -2px 2px rgba(255, 255, 255, 0.25) inset, 0 2px 2px rgba(255, 255, 255, 0.4) inset;
  background: #0c960c;
  background: linear-gradient(#0c960c, #0ebc0e);
}

.basic {
  border: 1px solid #466995;
  border-radius: 10px;
  box-shadow: 0px 4px;
}

.basic:hover {
  background-color: #C0D6DF;
}

.basic:active {
  margin-top: 10px;
  margin-bottom: -10px;
  box-shadow: 0px 0px;
  color: #ffffff;
}


.flat {
  background-color: #1D1;
  color: #fff;
  border: 2px solid #12dd23;
  border-radius: 10px;
}

.flat:hover {
  background-color: #0c960c;
  transition: background-color .15s, font-size .15s;
  font-size: 18px;
}

.flat:active {
  border-color: #fff;
}

/* Footer */

footer {
  background-color: #333;
  color: #fff;
  padding: 30px 0;
  /* To make it fixed */
  /* position: fixed; */
  position: relative;
  bottom: 0px;
  z-index: 2;
  width: 100%;
}

footer p {
  font-family: 'Raleway', sans-serif;
  text-transform: uppercase;
  font-size: 11px;
}